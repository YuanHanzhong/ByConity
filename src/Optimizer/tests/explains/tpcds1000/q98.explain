Projection Est. 13522268 rows
│     Expressions: [i_category, i_class, i_current_price, i_item_desc, i_item_id], itemrevenue:=`expr#sum(ss_ext_sales_price)`, revenueratio:=`expr#divide(multiply(sum(ss_ext_sales_price), 100), sum(sum(ss_ext_sales_price)) OVER (PARTITION BY i_class))`
└─ Sorting Est. 13522268 rows
   │     Order by: {i_category asc, i_class asc, i_item_id asc, i_item_desc asc, expr#divide(multiply(sum(ss_ext_sales_price), 100), sum(sum(ss_ext_sales_price)) OVER (PARTITION BY i_class)) asc}
   └─ Gather Exchange Est. 13522268 rows
      └─ Sorting Est. 13522268 rows
         │     Order by: {i_category asc, i_class asc, i_item_id asc, i_item_desc asc, expr#divide(multiply(sum(ss_ext_sales_price), 100), sum(sum(ss_ext_sales_price)) OVER (PARTITION BY i_class)) asc}
         └─ Projection Est. 13522268 rows
            │     Expressions: [expr#sum(ss_ext_sales_price), i_category, i_class, i_current_price, i_item_desc, i_item_id], expr#divide(multiply(sum(ss_ext_sales_price), 100), sum(sum(ss_ext_sales_price)) OVER (PARTITION BY i_class)):=(`expr#sum(ss_ext_sales_price)` * 100) / `expr#sum(sum(ss_ext_sales_price)) OVER (PARTITION BY i_class)`
            └─ Window Est. 13522268 rows
               └─ Repartition Exchange Est. 13522268 rows
                  │     Partition by: {i_class}
                  └─ MergingAggregated Est. 13522268 rows
                     └─ Repartition Exchange Est. 13522267 rows
                        │     Partition by: {i_item_id, i_item_desc, i_category, i_class, i_current_price}
                        └─ Aggregating Est. 13522267 rows
                           │     Group by: {i_item_id, i_item_desc, i_category, i_class, i_current_price}
                           │     Aggregates: expr#sum(ss_ext_sales_price):=AggNull(sum)(ss_ext_sales_price)
                           └─ Inner Join Est. 13522267 rows
                              │     Condition: ss_item_sk == i_item_sk
                              │     Runtime Filters Builder: {i_item_sk}
                              ├─ Inner Join Est. 45121367 rows
                              │  │     Condition: ss_sold_date_sk == d_date_sk
                              │  │     Runtime Filters Builder: {d_date_sk}
                              │  ├─ Filter Est. 2879987999 rows
                              │  │  │     Condition: Runtime Filters: {ss_item_sk, ss_sold_date_sk}
                              │  │  └─ TableScan tpcds1000.store_sales Est. 2879987999 rows
                              │  │           Where: Runtime Filters: {ss_item_sk, ss_sold_date_sk}
                              │  │           Outputs: [ss_sold_date_sk, ss_item_sk, ss_ext_sales_price]
                              │  └─ Broadcast Exchange Est. 29 rows
                              │     └─ Filter Est. 29 rows
                              │        │     Condition: (d_date >= cast(10644, 'Date')) AND (d_date <= cast(10674, 'Date'))
                              │        └─ TableScan tpcds1000.date_dim Est. 73049 rows
                              │                 Where: (d_date >= cast(10644, 'Date')) AND (d_date <= cast(10674, 'Date'))
                              │                 Outputs: [d_date_sk, d_date]
                              └─ Broadcast Exchange Est. 89906 rows
                                 └─ Filter Est. 89906 rows
                                    │     Condition: i_category IN ('Books', 'Home', 'Sports')
                                    └─ TableScan tpcds1000.item Est. 300000 rows
                                             Where: i_category IN ('Books', 'Home', 'Sports')
                                             Outputs: [i_item_sk, i_item_id, i_item_desc, i_current_price, i_class, i_category]
note: Runtime Filter is applied for 2 times.
